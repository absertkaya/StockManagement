@page "/itemform/out/{serialnr}"
@using StockManagement.Domain;
@using StockManagement.Domain.IRepositories;
@using StockManagement.Graph
@inject IItemRepository  Repository
@inject NavigationManager NavigationManager

<h1>Haal item uit stock</h1>

<EditForm EditContext="@_editContext" OnValidSubmit="Submit">
    <div class="form-group">
        <label for="serialnr">Serienummer</label>
        <input class="form-control" type="text" @bind="SerialNr" />
    </div>
    <UserSelectBox @ref="_userSelect">

    </UserSelectBox>
    @if (_submitFail)
    {
        <p class="text-danger">Ongeldige invoergegevens</p>
    }
    <button class="btn btn-primary" type="submit">Haal uit</button>
</EditForm>


@code {

    [Parameter]
    public string SerialNr { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }


    private UserSelectBox _userSelect;

    private Item _item;
    private EditContext _editContext;
    private bool _submitFail;

    private bool _invalidSerialnr;

    protected override void OnInitialized()
    {
        _item = Repository.GetBySerialNr(SerialNr);
        _editContext = new EditContext(_item);
    }

    private async Task Submit()
    {
        try
        {
            GraphUser graphUser = _userSelect.GetSelectedUser();
            ADUser aduser = (ADUser)await Repository.GetById(typeof(ADUser), graphUser.Id);
            if (aduser == null)
            {
                aduser = new ADUser(graphUser);
                Repository.Save(aduser);
            }
            _item.ADUser = aduser;
            _item.InStock = false;


            var authState = await authenticationStateTask;
            var assigner = authState.User;

            ADUser adAssigner = (ADUser) await Repository.GetById(typeof(ADUser), assigner.Identity.Name);
            if (adAssigner == null)
            {

            }

            ItemUser history = new ItemUser()
            {
                User = aduser,
                Item = _item,
                //AssignedBy =
        };

            Repository.Save(history);
            Repository.Save(_item);

            NavigationManager.NavigateTo("updatesucces/out/" + _item.Product?.Id, true);
        }
        catch (Exception ex)
        {
            _submitFail = true;
        }

    }
}
