@page "/productform"
@page "/productform/{productnr}"
@page "/productform/id/{id:int}"
@using StockManagement.Domain
@using StockManagement.Domain.IRepositories
@inject IItemRepository Repository
@inject NavigationManager NavigationManager

<h3>ProductForm</h3>
<EditForm EditContext="@_editContext" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="productnr">Productnummer</label>
        <InputText @bind-Value="@_product.ProductNumber" type="text" class="form-control" id="productnr" placeholder="Productnummer" />
    </div>
    <div class="form-group">
        <label for="description">Productnaam</label>
        <InputText @bind-Value="@_product.Description" type="text" class="form-control" id="description" placeholder="Productnaam" />
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <select  @onchange="SelectCategory" id="category" class="form-control">
            <option value="" selected hidden>Kies een categorie</option>
            @if (_categories != null)
            {
                @foreach (Category cat in _categories)
                {
                    <option value=@cat.Id>@cat.CategoryName</option>
                }
            }
        </select>
    </div>
</EditForm>

@if (_submitFail)
{
    <p class="text-danger">Fout bij het persisteren van de data</p>
}
<div class="form-group">
    @if (Id == null)
    {
        <button @onclick="Submit" class="btn btn-primary">Voeg toe</button>
    }
    else
    {
        <button @onclick="Submit" class="btn btn-primary">Update</button>
    }

    <button @onclick="Back" class="btn btn-secondary">Terug</button>
</div>


@code {
    [Parameter]
    public string ProductNr { get; set; }

    [Parameter]
    public int? Id { get; set; }

    private IList<Category> _categories;
    private Product _product = new Product();
    private EditContext _editContext;

    private int? _selectedCategory;
    private string _description;
    private string _productnr;

    private bool _submitFail;

    protected override void OnInitialized()
    {
        _productnr = ProductNr;
        _editContext = new EditContext(_product);
    }

    protected override async Task OnInitializedAsync()
    {
        _categories = await Repository.GetAll<Category>();
        if (Id != null)
        {
            _product = (Product)await Repository.GetById(typeof(Product), Id);
            _description = _product.Description;
            _productnr = _product.ProductNumber;
            _selectedCategory = _product.Category.Id;
        }
    }

    private void SelectCategory(ChangeEventArgs e)
    {
        int id = int.Parse(e.Value.ToString());
        _product.Category = _categories.FirstOrDefault(c => c.Id == id);
    }

    private void Submit()
    {
        if (_editContext.Validate())
        {
            try
            {
                Repository.Save(_product);
                NavigationManager.NavigateTo("/beheer", true);
            }
            catch (Exception ex)
            {
                _submitFail = true;
            }
        }

    }

    private void Back()
    {
        NavigationManager.NavigateTo("/beheer");
    }
}
