@page "/itemlijst/{id:int}"
@using StockManagement.Domain
@using StockManagement.Domain.IRepositories
@inject IItemRepository Repository
@inject NavigationManager NavigationManager

<h3>@_productName</h3>

<table class="table table-bordered table-striped">
    <thead class="thead-dark">
        <tr>
            <th>Id</th>
            <th>Serienummer</th>
            <th>Leverancier</th>
            <th>Gebruiker</th>
            <th>Email</th>
            <th>In stock?</th>
            <th>Is defect?</th>
            <th>Opmerkingen</th>
            <th></th>
        </tr>
    </thead>

    @if (_items != null)
    {
        @foreach (Item item in _items)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.SerialNumber</td>
                <td>@item.Supplier?.SupplierName</td>

                @if (item.ADUser != null)
                {
                    <td>@(item.ADUser.FirstName + " " + item.ADUser.LastName)</td>
                    <td>@(item.ADUser.Mail)</td>
                }
                else
                {
                    <td>/</td>
                    <td>/</td>
                }

                <td>
                    @if (item.InStock)
                    {
                        <i class="oi oi-circle-check text-success"></i>
                    }
                    else
                    {
                        <i class="oi oi-circle-x text-danger"></i>
                    }
                </td>
                <td>
                    @if (item.IsDefective)
                    {
                       <i class="oi oi-circle-check text-success"></i>
                    }
                    else
                    {
                        <i class="oi oi-circle-x text-danger"></i>
                    }
                </td>
                <td>@item.Comment</td>
                <td>
                    <div>
                        <button class="btn btn-primary" @onclick="@(() => GetHistory(item.Id))"><i class="oi oi-magnifying-glass"></i></button>
                        <button @onclick="@(() => EditItem(item.Id))" class="btn btn-secondary"><i class="oi oi-pencil"></i></button>
                        <button @onclick="@(() => DeleteItem(item))" class="btn btn-danger"><i class="oi oi-trash"></i></button>
                    </div>
                    
                </td>
            </tr>
        }
    }

</table>

@code {
    [Parameter]
    public int Id { get; set; }

    private IList<Item> _items;
    private string _productName;

    protected override async Task OnInitializedAsync()
    {
        Product prod = (Product) await Repository.GetById(typeof(Product), Id);

        _productName = prod.Description;
        _items = prod.Items;
    }

    private void GetHistory(int id)
    {
        NavigationManager.NavigateTo("/itemhistoriek/" + id);
    }

    private void EditItem(int id)
    {
        NavigationManager.NavigateTo("/itemform/in/id/" + id);
    }

    private void DeleteItem(Item item)
    {
        _items.Remove(item);
        Repository.Delete(item);
    }
}
