@page "/itemform/{method}"
@page "/itemform/{method}/{serialnr}"
@using StockManagement.Domain;
@using StockManagement.Domain.IRepositories;
@inject IItemRepository  Repository
@inject NavigationManager NavigationManager
<h1>ItemFormPage</h1>

<EditForm EditContext="@_editContext" OnValidSubmit="HandleValidSubmit">
    <p>
        Categorie:
        <select @onchange="FetchDescriptions">
            <option value="" selected hidden>Kies een categorie</option>

            @if (_categories != null)
            {
                @foreach (Category cat in _categories)
                {
                    <option value=@cat.Id>@cat.CategoryName</option>
                }
            }
        </select>
    </p>
    <p>
        Item:
        <select @bind="_selectedDescription">
            <option value="" selected hidden>Kies een omschrijving</option>
            @if (_descriptions != null)
            {
                @foreach (Product item in _descriptions)
                {
                    <option value=@item.Id>@item.Description</option>
                }
            }
        </select>
    </p>
    <p>
        Leverancier:
        <select @bind="_selectedSupplier">
            <option value="" selected hidden>Kies een leverancier</option>
            @if (_suppliers != null)
            {
                @foreach (Supplier supplier in _suppliers)
                {
                    <option value=@supplier.Id>@supplier.SupplierName</option>
                }
            }
        </select>
    </p>
    <p>
        Gebruiker:
        <select @bind="_selectedUser">
            <option value="" selected hidden>Kies een gebruiker</option>
            @if (_suppliers != null)
            {
                @foreach (ADUser user in _users)
                {
                    <option value=@user.Id>@(user.FirstName + " " + user.LastName)</option>
                }
            }
        </select>
    </p>
    <p>
        Defect?
        <InputCheckbox @bind-Value="_isDefective" />
    </p>
    <p>
        Opmerkingen:
        <InputTextArea @bind-Value="_comment"></InputTextArea>
    </p>

    @if (Method == "in")
    {
        <button type="submit">Voeg toe</button>
    }
    else if (Method == "out")
    {
        <button type="submit">Verwijder</button>
    }


</EditForm>


@code {

    [Parameter]
    public string SerialNr { get; set; }
    [Parameter]
    public string Method { get; set; }

    private Item _item;
    private EditContext _editContext;

    private IList<Category> _categories;
    private IList<Product> _descriptions;
    private IList<Supplier> _suppliers;
    private IList<ADUser> _users;

    private int _selectedCategory;
    private int _selectedDescription;
    private int _selectedSupplier;
    private int _selectedUser;
    private bool _isDefective;
    private string _comment;

    protected override void OnInitialized()
    {
        _item = Repository.GetBySerialNr(SerialNr);
        if (_item == null)
        {
            _item = new Item();
        }
        _editContext = new EditContext(_item);
    }

    protected override async Task OnInitializedAsync()
    {
        _categories = await Repository.GetAll<Category>();
        _suppliers = await Repository.GetAll<Supplier>();
        _users = await Repository.GetAll<ADUser>();
    }

    public async Task FetchDescriptions(ChangeEventArgs e)
    {
        _selectedCategory = int.Parse(e.Value.ToString());
        _descriptions = await Repository.GetByCategory(_selectedCategory);
    }

    private void HandleValidSubmit()
    {
        _item.SerialNumber = SerialNr;
        _item.Product = _descriptions.FirstOrDefault(i => _selectedDescription == i.Id);
        _item.ADUser = _users.FirstOrDefault(u => _selectedUser == u.Id);
        _item.IsDefective = _isDefective;
        _item.Comment = _comment;
        _item.InStock = (Method == "in");

        Repository.Save(_item);
        NavigationManager.NavigateTo("updatesucces/" + Method + "/" + _selectedDescription, true);

    }
}
